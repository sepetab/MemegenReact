{"ast":null,"code":"var _jsxFileName = \"/Users/sepetab/Desktop/MemegenReact/src/MemeGenerator.js\";\nimport React from \"react\";\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      character: {},\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.dev/api/people/1\").then(data => data.json()).then(jsonData => {\n      this.setState({\n        character: jsonData\n      });\n    });\n  }\n\n  render() {\n    const sentence = this.state.loading ? \"loading...\" : this.state.character.name;\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, sentence);\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/sepetab/Desktop/MemegenReact/src/MemeGenerator.js"],"names":["React","MemeGenerator","Component","constructor","state","character","loading","componentDidMount","fetch","then","data","json","jsonData","setState","render","sentence","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,QAAQ,IAAI;AACf,WAAKC,QAAL,CAAc;AAACR,QAAAA,SAAS,EAACO;AAAX,OAAd;AACF,KAJD;AAKH;;AACDE,EAAAA,MAAM,GAAE;AAER,UAAMC,QAAQ,GAAG,KAAKX,KAAL,CAAWE,OAAX,GAAqB,YAArB,GAAoC,KAAKF,KAAL,CAAWC,SAAX,CAAqBW,IAA1E;AACA,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,QAAJ,CAAR;AACC;;AArBuC;;AA0B5C,eAAed,aAAf","sourcesContent":["import React from \"react\"\n\nclass MemeGenerator extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            character: {},\n            loading: false\n        }\n    }\n\n    componentDidMount(){\n        fetch(\"https://swapi.dev/api/people/1\")\n        .then(data => data.json())\n        .then(jsonData => {\n           this.setState({character:jsonData}) \n        })\n    }\n    render(){\n\n    const sentence = this.state.loading ? \"loading...\" : this.state.character.name\n    return (<p>{sentence}</p>)\n    }\n\n}\n\n\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}