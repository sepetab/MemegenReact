{"ast":null,"code":"var _jsxFileName = \"/Users/sepetab/Desktop/MemegenReact/src/MemeGenerator.js\";\nimport React from \"react\";\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      imgUrl: \"http://i.imgflip.com/1bij.jpg\",\n      AMI: []\n    };\n    this.textChanger = this.textChanger.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(data => data.json()).then(jsonData => {\n      console.log(jsonData.data.memes[0]); //this.setState({AMI:jsonData.data.memes})\n    });\n  }\n\n  textChanger(e) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"meme-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"topText\",\n      placeholder: \"Top Text\",\n      value: this.state.topText,\n      onChange: this.textChanger,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bottomText\",\n      placeholder: \"Bottom Text\",\n      value: this.state.bottomText,\n      onChange: this.textChanger,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Gen\"));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/sepetab/Desktop/MemegenReact/src/MemeGenerator.js"],"names":["React","MemeGenerator","Component","constructor","state","topText","bottomText","imgUrl","AMI","textChanger","bind","componentDidMount","fetch","then","data","json","jsonData","console","log","memes","e","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,MAAM,EAAE,+BAHC;AAITC,MAAAA,GAAG,EAAC;AAJK,KAAb;AAMA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACF,IAAT,CAAcK,KAAd,CAAoB,CAApB,CAAZ,EADc,CAEd;AACH,KALD;AAMH;;AAEDV,EAAAA,WAAW,CAACW,CAAD,EAAG,CAEb;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,OAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKI,WALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,YAFT;AAGI,MAAA,WAAW,EAAC,aAHhB;AAII,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,UAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKG,WALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADJ;AAoBH;;AAhDuC;;AAqD5C,eAAeR,aAAf","sourcesContent":["import React from \"react\"\n\nclass MemeGenerator extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            imgUrl: \"http://i.imgflip.com/1bij.jpg\",\n            AMI:[]\n        }\n        this.textChanger = this.textChanger.bind(this)\n    }\n\n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(data => data.json())\n        .then(jsonData => {\n            console.log(jsonData.data.memes[0])\n            //this.setState({AMI:jsonData.data.memes})\n        })\n    }\n\n    textChanger(e){\n        \n    }\n\n    render(){\n\n        return (\n            <form className=\"meme-form\">\n                <input\n                    type=\"text\"\n                    name=\"topText\"\n                    placeholder=\"Top Text\"\n                    value={this.state.topText}\n                    onChange={this.textChanger}\n                />\n                <input\n                    type=\"text\"\n                    name=\"bottomText\"\n                    placeholder=\"Bottom Text\"\n                    value={this.state.bottomText}\n                    onChange={this.textChanger}\n                />\n\n                <button>Gen</button>\n            </form>\n        )\n    }\n\n}\n\n\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}