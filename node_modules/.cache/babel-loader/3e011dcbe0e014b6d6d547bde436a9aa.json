{"ast":null,"code":"var _jsxFileName = \"/Users/sepetab/Desktop/MemegenReact/src/MemeGenerator.js\";\nimport React from \"react\";\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      imgUrl: \"http://i.imgflip.com/1bij.jpg\",\n      AMI: [],\n      loading: true\n    };\n    this.textChanger = this.textChanger.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(data => data.json()).then(jsonData => {\n      //console.log(jsonData.data.memes[0])\n      this.setState({\n        AMI: jsonData.data.memes,\n        loading: false\n      });\n      console.log(this.state.AMI[1].url);\n    });\n  }\n\n  textChanger(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  submitForm() {\n    this.state.loading ? console.log(\"HELLOOOOO\") : this.setState({\n      imgUrl: \"\"\n    }); //this.state.loading ? console.log(\"HELLO WORLD\") :console.log(this.state.AMI.random().url)\n    //this.state.loading ? this.setState({imgUrl:\"\"}) : this.setState({imgUrl: this.state.AMI.random().url})\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"meme-form\",\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"topText\",\n      placeholder: \"Top Text\",\n      value: this.state.topText,\n      onChange: this.textChanger,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bottomText\",\n      placeholder: \"Bottom Text\",\n      value: this.state.bottomText,\n      onChange: this.textChanger,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Gen\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imgUrl,\n      alt: \"nope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, this.state.topText), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, this.state.bottomText)));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/sepetab/Desktop/MemegenReact/src/MemeGenerator.js"],"names":["React","MemeGenerator","Component","constructor","state","topText","bottomText","imgUrl","AMI","loading","textChanger","bind","submitForm","componentDidMount","fetch","then","data","json","jsonData","setState","memes","console","log","url","e","name","value","target","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,MAAM,EAAE,+BAHC;AAITC,MAAAA,GAAG,EAAC,EAJK;AAKTC,MAAAA,OAAO,EAAC;AALC,KAAb;AAOA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDE,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,QAAQ,IAAI;AACd;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,GAAG,EAACU,QAAQ,CAACF,IAAT,CAAcI,KAAnB;AAAyBX,QAAAA,OAAO,EAAC;AAAjC,OAAd;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWI,GAAX,CAAe,CAAf,EAAkBe,GAA9B;AACH,KAND;AAOH;;AAEDb,EAAAA,WAAW,CAACc,CAAD,EAAG;AACV,UAAM;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAeF,CAAC,CAACG,MAAvB;AACA,SAAKR,QAAL,CAAc;AAAC,OAACM,IAAD,GAAOC;AAAR,KAAd;AACH;;AAEDd,EAAAA,UAAU,GAAE;AACR,SAAKR,KAAL,CAAWK,OAAX,GAAqBY,OAAO,CAACC,GAAR,CAAY,WAAZ,CAArB,GAAgD,KAAKH,QAAL,CAAc;AAACZ,MAAAA,MAAM,EAAC;AAAR,KAAd,CAAhD,CADQ,CAER;AACA;AACH;;AAEDqB,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,QAAQ,EAAE,KAAKhB,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,OAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKK,WALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,YAFT;AAGI,MAAA,WAAW,EAAC,aAHhB;AAII,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,UAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKI,WALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADJ,eAmBI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWG,MAArB;AAA6B,MAAA,GAAG,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,KAAKH,KAAL,CAAWC,OAAhC,CAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKD,KAAL,CAAWE,UAAnC,CAHJ,CAnBJ,CADJ;AA2BH;;AAjEuC;;AAsE5C,eAAeL,aAAf","sourcesContent":["import React from \"react\"\n\nclass MemeGenerator extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            imgUrl: \"http://i.imgflip.com/1bij.jpg\",\n            AMI:[],\n            loading:true\n        }\n        this.textChanger = this.textChanger.bind(this)\n        this.submitForm = this.submitForm.bind(this)\n    }\n\n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(data => data.json())\n        .then(jsonData => {\n            //console.log(jsonData.data.memes[0])\n            this.setState({AMI:jsonData.data.memes,loading:false})\n            console.log(this.state.AMI[1].url)\n        })\n    }\n\n    textChanger(e){\n        const {name,value} = e.target;\n        this.setState({[name]:value})\n    }\n\n    submitForm(){\n        this.state.loading ? console.log(\"HELLOOOOO\") : this.setState({imgUrl:\"\"})\n        //this.state.loading ? console.log(\"HELLO WORLD\") :console.log(this.state.AMI.random().url)\n        //this.state.loading ? this.setState({imgUrl:\"\"}) : this.setState({imgUrl: this.state.AMI.random().url})\n    }\n\n    render(){\n\n        return (\n            <div>\n                <form className=\"meme-form\" onSubmit={this.submitForm}>\n                    <input\n                        type=\"text\"\n                        name=\"topText\"\n                        placeholder=\"Top Text\"\n                        value={this.state.topText}\n                        onChange={this.textChanger}\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"bottomText\"\n                        placeholder=\"Bottom Text\"\n                        value={this.state.bottomText}\n                        onChange={this.textChanger}\n                    />\n            \n                    <button>Gen</button>\n                </form>\n                <div className=\"meme\">\n                    <img src={this.state.imgUrl} alt=\"nope\" />\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}